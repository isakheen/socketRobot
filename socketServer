import socket
import sys
import os
sys.path.insert(0, os.path.abspath('.'))
from lib.dobot import Dobot
from time import sleep
import RPi.GPIO as GPIO
from chewzday_init import *
bot = Dobot('/dev/ttyS0')
bot.interface.set_point_to_point_coordinate_params(300,300,300,300)
bot.interface.set_ir_switch(2, 1, 2, 1)
bot.interface.set_color_sensor(2, 1, 1, 1)

GPIO.setwarnings(False)
GPIO.setmode(GPIO.BOARD)
GPIO.setup(12, GPIO.OUT)
GPIO.setup(16, GPIO.OUT)
GPIO.output(16, GPIO.HIGH)
pi_pwm = GPIO.PWM(12,400)
pi_pwm.start(0)
pi_pwm.ChangeDutyCycle(50)
GPIO.setup(12, GPIO.IN)

#check_ir()
#move_belt(2)
#starta_inlev([0,0,0,0])
#check_ir()
#change_values("on")
pack_order([8,8,8,8],[8,8,8,8])
#to_target(target)
#prints = bot.get_pose()
#print(prints)
"""
def server_program():
    
    
    # get the hostname
    host = "192.168.26.250"
    port = 1234 # initiate port no above 1024

    server_socket = socket.socket()  # get instance
    # look closely. The bind() function takes tuple as argument
    server_socket.bind((host, port))  # bind host address and port together
    print("starting server")
    # configure how many client the server can listen simultaneously
    server_socket.listen(5)
    conn, address = server_socket.accept()  # accept new connection
    print("Connection from: " + str(address))
    while True:
        # receive data stream. it won't accept data packet greater than 1024 bytes
        data = conn.recv(1024).decode()
        if not data:
            # if data is not received break
            break

        print("from connected user: " + str(data))

        if data.__contains__("("):
            exec(data)
            data = "klar " + list_to_string(get_cube_list())
            print(data)

        elif data == "hearbeat":
            data = "alive"

        else:
            data = "message received"

        conn.send(data.encode())

    conn.close()  # close the connection

if __name__ == '__main__':
    server_program()
    """
